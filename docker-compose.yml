services:
  traefik:
    image: traefik:v2.10
    container_name: traefik
    restart: unless-stopped
    ports:
      - "80:80" # HTTP
      - "443:443" # HTTPS
      - "8080:8080" # Traefik dashboard
      - "5055:5055" # Traccar Teltonika protocol
      - "5027:5027" # Traccar H02 protoco
      - "5080:5080" # Traccar xXX protoco
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - traefik-data:/etc/traefik
    command:
      - "--api.insecure=true" # Enable dashboard (insecure, for development only)
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--entrypoints.traccar-teltonika.address=:5055"
      - "--entrypoints.traccar-h02.address=:5027"
      - "--entrypoints.traccar-xXX.address=:5080"
      - "--entrypoints.traccar-pgadmin.address=:8081"
      - "--entrypoints.web.http.redirections.entryPoint.to=websecure"
      - "--entrypoints.web.http.redirections.entryPoint.scheme=https"
      - "--certificatesresolvers.myresolver.acme.tlschallenge=true"
      - "--certificatesresolvers.myresolver.acme.email=c.morgenthaler@morgenthaler-de.com"
      - "--certificatesresolvers.myresolver.acme.storage=/etc/traefik/acme.json"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.rule=Host(`ingress.socratec.gmbh`)"
      - "traefik.http.routers.traefik.entrypoints=websecure"
      - "traefik.http.routers.traefik.tls.certresolver=myresolver"
      - "traefik.http.routers.traefik.service=api@internal"

  mariadb:
    image: mariadb:latest
    restart: unless-stopped
    environment:
      - MARIADB_ROOT_PASSWORD=traccar_root_password
      - MARIADB_DATABASE=traccar
      - MARIADB_USER=traccar
      - MARIADB_PASSWORD=traccar_password
      - MARIADB_AUTO_UPGRADE=1
    command:
      [
        "--character-set-server=utf8mb4",
        "--collation-server=utf8mb4_unicode_ci",
        "--innodb-file-per-table=1",
      ]
    volumes:
      - mariadb-data:/var/lib/mysql
    healthcheck:
        test: [ "CMD", "healthcheck.sh", "--connect", "--innodb_initialized" ]
        start_period: 1m
        start_interval: 10s
        interval: 1m
        timeout: 5s
        retries: 3

  adminer:
    image: adminer:latest
    container_name: adminer
    restart: unless-stopped
    environment:
      - ADMINER_DEFAULT_SERVER=mariadb
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.pgadmin.rule=Host(`pgadmin.socratec.gmbh`)"
      - "traefik.http.routers.pgadmin.entrypoints=websecure"
      - "traefik.http.routers.pgadmin.tls.certresolver=myresolver"
      - "traefik.http.services.pgadmin.loadbalancer.server.port=8080"

  traccar:
    image: ghcr.io/socratec-telematic-gmbh/traccar-docker:latest
    container_name: traccar
    restart: unless-stopped
    depends_on:
      mariadb:
        condition: service_healthy
    ports:
      - "1883:1883"
      - "5001-5026:5001-5026"
      - "5028-5054:5028-5054"
      - "5056-5079:5056-5079"
      - "5081-5200:5081-5200"
    volumes:
      - traccar-config:/opt/traccar/conf
      - traccar-data:/opt/traccar/data
      - traccar-logs:/opt/traccar/logs
    environment:
      - TRACCAR_DB_HOST=mariadb
      - TRACCAR_DB_PORT=3306
      - TRACCAR_DB_NAME=traccar
      - TRACCAR_DB_USER=traccar
      - TRACCAR_DB_PASSWORD=traccar_password
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "if [ $$(cat /proc/uptime | cut -d' ' -f1 | cut -d'.' -f1) -gt 60 ]; then exit 0; else exit 1; fi",
        ]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 75s
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traccar.rule=Host(`smc.socratec.gmbh`)"
      - "traefik.http.routers.traccar.entrypoints=websecure"
      - "traefik.http.routers.traccar.tls.certresolver=myresolver"
      - "traefik.http.routers.traccar.service=traccar-web"
      - "traefik.http.services.traccar-web.loadbalancer.server.port=8082"
      # TCP router and service for Teltonika (5055)
      - "traefik.tcp.routers.traccar-teltonika.rule=HostSNI(`*`)"
      - "traefik.tcp.routers.traccar-teltonika.entrypoints=traccar-teltonika"
      - "traefik.tcp.routers.traccar-teltonika.service=traccar-teltonika-svc"
      - "traefik.tcp.services.traccar-teltonika-svc.loadbalancer.server.port=5055"
      # TCP router and service for H02 (5027)
      - "traefik.tcp.routers.traccar-h02.rule=HostSNI(`*`)"
      - "traefik.tcp.routers.traccar-h02.entrypoints=traccar-h02"
      - "traefik.tcp.routers.traccar-h02.service=traccar-h02-svc"
      - "traefik.tcp.services.traccar-h02-svc.loadbalancer.server.port=5027"
      # TCP router and service for xXX (5080)
      - "traefik.tcp.routers.traccar-xXX.rule=HostSNI(`*`)"
      - "traefik.tcp.routers.traccar-xXX.entrypoints=traccar-xXX"
      - "traefik.tcp.routers.traccar-xXX.service=traccar-xXX-svc"
      - "traefik.tcp.services.traccar-xXX-svc.loadbalancer.server.port=5080"

  traccar-forwarder:
   image: ghcr.io/socratec-telematic-gmbh/traccar-forwarder:latest
    container_name: traccar-forwarder
    restart: unless-stopped
    depends_on:
      traccar:
        condition: service_healthy
    volumes:
      - ./appsettings.json:/app/appsettings.json:ro
      - ./state:/app/state
    environment:
      - ASPNETCORE_ENVIRONMENT=Production

volumes:
  traefik-data:
  mariadb-data:
  traccar-config:
  traccar-data:
  traccar-logs:

networks:
  default:
    name: traccar-network
